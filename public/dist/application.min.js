"use strict";var ApplicationConfiguration=function(){var applicationModuleName="nnb",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("orders"),ApplicationConfiguration.registerModule("users"),ApplicationConfiguration.registerModule("wechat"),angular.module("core").constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).constant("USER_ROLES",{all:"*",user:"user",service:"service",admin:"admin","super":"super"}),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("403",{url:"/403",templateUrl:"modules/core/views/403.client.view.html"}).state("401",{url:"/401",templateUrl:"modules/core/views/401.client.view.html"}).state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]).run(["$rootScope","$state","$location","Authentication","USER_ROLES","AUTH_EVENTS",function($rootScope,$state,$location,Authentication,USER_ROLES,AUTH_EVENTS){$rootScope.$on("$stateChangeStart",function(event,nextRoute){var subTitle=nextRoute.subTitle;document.title=subTitle?"奶牛帮 - "+subTitle:"奶牛帮";var authorizedRoles=nextRoute.authorizedRoles;angular.isArray(authorizedRoles)&&authorizedRoles.length>0&&!Authentication.isAuthorized(authorizedRoles)&&(event.preventDefault(),$rootScope.$broadcast(Authentication.isAuthenticated()?AUTH_EVENTS.notAuthorized:AUTH_EVENTS.notAuthenticated))}),$rootScope.$on(AUTH_EVENTS.notAuthenticated,function(){$state.go("401")}),$rootScope.$on(AUTH_EVENTS.notAuthorized,function(){$state.go("403")})}]),angular.module("core").controller("CoreController",["$scope","$location","USER_ROLES",function($scope,$location,USER_ROLES){$scope.userRoles=USER_ROLES,$scope.$on("$stateChangeSuccess",function(){$scope.hideHeader=0===$location.path().indexOf("/wechat")?!0:!1})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").filter("hasIntersection",[function(){return function(array1,array2){for(var index1 in array1)for(var index2 in array2)if(array2[index2]===array1[index1])return!0;return!1}}]).filter("hasValue",[function(){return function(array,value){for(var index in array)if(array[index]===value)return!0;return!1}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("orders").run(["Menus","USER_ROLES",function(Menus,USER_ROLES){Menus.addMenuItem("topbar","订单","orders","dropdown","/orders(/create)?",!1,[USER_ROLES.service]),Menus.addSubMenuItem("topbar","orders","订单列表","orders"),Menus.addSubMenuItem("topbar","orders","新建订单","orders/create")}]),angular.module("orders").config(["$stateProvider","USER_ROLES",function($stateProvider,USER_ROLES){$stateProvider.state("listOrders",{url:"/orders",templateUrl:"modules/orders/views/list-orders.client.view.html",authorizedRoles:[USER_ROLES.service]}).state("createOrder",{url:"/orders/create",templateUrl:"modules/orders/views/create-order.client.view.html",authorizedRoles:[USER_ROLES.service]}).state("viewOrder",{url:"/orders/:id",templateUrl:"modules/orders/views/view-order.client.view.html",authorizedRoles:[USER_ROLES.service]}).state("editOrder",{url:"/orders/:id/edit",templateUrl:"modules/orders/views/edit-order.client.view.html",authorizedRoles:[USER_ROLES.service]})}]),angular.module("orders").controller("OrdersController",["$scope","$stateParams","$location","Authentication","Orders",function($scope,$stateParams,$location,Authentication,Orders){$scope.authentication=Authentication,$scope.daysAfterBearing="1",$scope.hasFever="",$scope.daysAfterBearingOptions=[{id:"1",value:"1天"},{id:"2",value:"2天"},{id:"3",value:"3天"},{id:"4",value:"4天"},{id:"5",value:"5天"},{id:"6",value:"6天"},{id:"7",value:"7天"},{id:"8",value:"8天"},{id:"9",value:"9天"},{id:"10",value:"10天"},{id:"11",value:"11天"},{id:"12",value:"12天"},{id:"13",value:"13天"},{id:"14",value:"14天"},{id:"15",value:"15天"},{id:"16",value:"大于15天"}],$scope.statusOptions=[{id:-1,value:"已取消"},{id:0,value:"新订单"},{id:1,value:"已确认"},{id:2,value:"已完成"}],$scope.create=function(){var order=new Orders({name:this.name,nickName:this.nickName,phone:this.phone,address:this.address,daysAfterBearing:this.daysAfterBearing,hasFever:this.hasFever?!0:!1});order.$save(function(response){$location.path("orders/"+response._id),$scope.name="",$scope.nickName="",$scope.phone="",$scope.address="",$scope.daysAfterBearing="1",$scope.hasFever=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.cancel=function(order){if(window.confirm("你确定要取消这个订单吗?"))if(order){order.$cancel();for(var i in $scope.orders)$scope.orders[i]===order&&$scope.orders.splice(i,1)}else $scope.order.$cancel(function(){$location.path("orders")})},$scope.update=function(){var order=$scope.order;order.status=parseInt($scope.order.status),order.$update(function(){$location.path("orders/"+order._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.orders=Orders.query()},$scope.findOne=function(){$scope.order=Orders.get({id:$stateParams.id})}}]),angular.module("orders").filter("getDaysAfterBearingText",[function(){return function(value,list){var obj=_.find(list,function(obj){return parseInt(obj.id)===parseInt(value)});return obj?obj.value:""}}]).filter("getHasFeverText",[function(){return function(hasFever){return hasFever?"是":"否"}}]).filter("getOrderStatusText",[function(){return function(status){var text="";switch(status){case 0:text="新订单";break;case-1:text="已取消";break;case 1:text="已确认";break;case 2:text="已完成"}return text}}]),angular.module("orders").factory("Orders",["$resource",function($resource){return $resource("orders/:id",{id:"@_id"},{update:{method:"PUT"},cancel:{method:"PUT",url:"orders/:id/cancel"},myLatest:{method:"GET",url:"orders/my/latest"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]).run(["Menus","USER_ROLES",function(Menus,USER_ROLES){Menus.addMenuItem("topbar","用户管理","users","dropdown","/users(/create)?",!1,[USER_ROLES["super"]],99),Menus.addSubMenuItem("topbar","users","用户列表","users")}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("users-list",{url:"/users",templateUrl:"modules/users/views/list-users.client.view.html"}).state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("./auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("./auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("./auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("./auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("UsersController",["$scope","$stateParams","$location","Authentication","Users",function($scope,$stateParams,$location,Authentication,Orders){$scope.authentication=Authentication,$scope.find=function(){$scope.users=Orders.query()}}]);var getRoleText=function(role){var text="";switch(role){case"super":text="超级管理员";break;case"admin":text="管理员";break;case"service":text="客服";break;case"user":text="普通用户"}return text};angular.module("users").filter("getRolesText",[function(){return function(list){var testList=[];return _.each(list,function(role){testList.push(getRoleText(role))}),testList.join(",")}}]),angular.module("users").factory("Authentication",["hasIntersectionFilter",function(hasIntersectionFilter){var authService={user:window.user};return authService.isAuthenticated=function(){return!!authService.user._id},authService.isAuthorized=function(authorizedRoles){return angular.isArray(authorizedRoles)||(authorizedRoles=[authorizedRoles]),authService.isAuthenticated()&&hasIntersectionFilter(authorizedRoles,authService.user.roles)},authService}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),angular.module("wechat").config(["$stateProvider",function($stateProvider){$stateProvider.state("wechat-my-orders",{url:"/wechat/orders/my",templateUrl:"modules/wechat/views/my-orders.client.view.html",subTitle:"修改/取消订单"}).state("wechat-edit-order-success",{url:"/wechat/orders/:id/edit/success",templateUrl:"modules/wechat/views/edit-order-success.client.view.html",subTitle:"订单修改成功"}).state("wechat-edit-order",{url:"/wechat/orders/:id/edit",templateUrl:"modules/wechat/views/edit-order.client.view.html",subTitle:"修改/取消订单"}).state("wechat-new-order-success",{url:"/wechat/orders/new/:id/success",templateUrl:"modules/wechat/views/new-order-success.client.view.html",subTitle:"下单成功"}).state("wechat-new-order",{url:"/wechat/orders/new",templateUrl:"modules/wechat/views/new-order.client.view.html",subTitle:"下订单"}).state("about",{url:"/wechat/about",templateUrl:"modules/wechat/views/about.client.view.html",subTitle:"关于奶牛帮"}).state("wechat-activities",{url:"/wechat/activities",templateUrl:"modules/wechat/views/activities.client.view.html",subTitle:"最新活动"}).state("wechat",{url:"/wechat",templateUrl:"modules/wechat/views/wechat.client.view.html",subTitle:"开奶宝典"})}]),angular.module("wechat").controller("WechatController",["$scope","$http","$stateParams","$location","Authentication","Orders",function($scope,$http,$stateParams,$location,Authentication,Orders){$scope.authentication=Authentication,$scope.daysAfterBearing="1",$scope.hasFever="",$scope.daysAfterBearingOptions=[{id:"1",value:"1天"},{id:"2",value:"2天"},{id:"3",value:"3天"},{id:"4",value:"4天"},{id:"5",value:"5天"},{id:"6",value:"6天"},{id:"7",value:"7天"},{id:"8",value:"8天"},{id:"9",value:"9天"},{id:"10",value:"10天"},{id:"11",value:"11天"},{id:"12",value:"12天"},{id:"13",value:"13天"},{id:"14",value:"14天"},{id:"15",value:"15天"},{id:"16",value:"大于15天"}],$scope.nickName=$scope.authentication.user?$scope.authentication.user.username:"",$scope.authentication.user&&($scope.myLatestOrder=Orders.myLatest(function(order){$scope.phone=order.phone})),$scope.create=function(){var order=new Orders({nickName:this.nickName,phone:this.phone,address:this.address,daysAfterBearing:this.daysAfterBearing,hasFever:this.hasFever?!0:!1});order.$save(function(response){$location.path("wechat/orders/new/"+response._id+"/success"),$scope.nickName="",$scope.phone="",$scope.address="",$scope.daysAfterBearing="1",$scope.hasFever=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.cancel=function(order){if(window.confirm("你确定要取消这个订单吗?"))if(order){order.$cancel();for(var i in $scope.orders)$scope.orders[i]===order&&$scope.orders.splice(i,1)}else $scope.order.$cancel(function(){$location.path("wechat/orders/new")})},$scope.update=function(){var order=$scope.order;order.$update(function(){$location.path("wechat/orders/"+order._id+"/edit/success")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.findOne=function(){$scope.order=Orders.get({id:$stateParams.id})},$scope.myOrder=function(){$scope.order=Orders.myLatest()}}]);